name: Hello World

on:
  push:
    branches: ['main']
    
jobs:
  hello_world-job:
    runs-on: ubuntu-latest
    steps:
      - name: 'Hello World'
        run: echo "Hello World"
      - name: 'Print date'
        run: date
      - name: 'Muestra archivos directorio sin checkout'
        run: ls -la

  basic_job:
    runs-on: ubuntu-latest
    steps:
      - name: 'Mi username'
        run: echo ${{ github.actor }}
      - run: echo "El trabajo fue lanzado automaticamente por un evento ${{ github.event_name }}."
      - run: echo "Este trabajo está corriendo ahora sobre un servidor ${{ runner.os }} alojado en GitHub."
      - run: echo "El nombre de tu rama es ${{ github.ref }}, y tu repositorio es ${{ github.repository }}."

      - name: 'checkout repository code'
        uses: actions/checkout@v4

      - run: echo "El repositorio ${{ github.repository }} ha sido clonado al entorno de ejecución."
      - run: echo "El worflow está ahora preparado para testear tu código en el entorno de ejecución."
      - name: 'Lista de archivos en el respositorio'
        run: |
          ls ${{ github.workspace }}
          echo "Archivos listados correctamente"
      - run: echo "El estado de este trabajo es ${{ job.status }}."
      - name: 'Muestra archivos del directorio con checkout'
        run: ls -la

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: 'Configurar Python'
        uses: actions/setup-python@v4
      - name: 'Instalar dependencias'
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: 'Lint with Ruff (usar la herrmienta Ruff)'
        run: |
          pip install ruff
          ruff check .
        continue-on-error: true
      - name: 'Test con pytest'
        run: coverage run -m pytest -v -s
      - name: 'Generar Coverage Report'
        run: coverage report -m --omit="/usr/*"
